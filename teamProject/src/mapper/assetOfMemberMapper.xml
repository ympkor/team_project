<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="mapper.AssetOfMemberMapper">

	<select id="selectAssetListById" resultType="assetOfMember">
		select * from member
		join assets_of_member on member.user_key = assets_of_member.user_key
		join assets on assets_of_member.assets_id = assets.assets_id
		where member.user_key = #{userKey} and assets.assets_id != 99 
		order by assets_of_member.amount desc;
	</select>

	<select id="selectOnlyAssetListById" resultType="assetOfMember">
		select * from member
		join assets_of_member on member.user_key = assets_of_member.user_key
		join assets on assets_of_member.assets_id = assets.assets_id
		where member.user_key = #{userKey} and assets_of_member.type = "자산" 
		and assets_of_member.amount <![CDATA[ > ]]> 0 
		and assets.assets_id != 99 
		order by assets_of_member.amount desc;
	</select>

	<select id="selectOnlyDebtListById" resultType="assetOfMember">
		select * from member
		join assets_of_member on member.user_key = assets_of_member.user_key
		join assets on assets_of_member.assets_id = assets.assets_id
		where member.user_key = #{userKey} and assets_of_member.type = "자산" 
		and assets_of_member.amount <![CDATA[ < ]]> 0 
		and assets.assets_id != 99 
		order by assets_of_member.amount;
	</select>
	
	<select id="selectOnlyZeroListById" resultType="assetOfMember">
		select * from member
		join assets_of_member on member.user_key = assets_of_member.user_key
		join assets on assets_of_member.assets_id = assets.assets_id
		where member.user_key = #{userKey} and assets_of_member.type = "자산" 
		and assets_of_member.amount = 0 
		and assets.assets_id != 99;
	</select>

	<select id="getAssetById" resultType="assetOfMember">
		select * from member
		join assets_of_member on member.user_key = assets_of_member.user_key
		join assets on assets_of_member.assets_id = assets.assets_id
		where mem_asset_id = #{memAssetId};
	</select>

	<select id="getLastAssetByUserKey" resultType="assetOfMember">
		select * from assets_of_member where user_key = #{userKey} order by mem_asset_id DESC limit 1;
	</select>

	<insert id="addAsset" parameterType="assetOfMember">
  		insert into assets_of_member (mem_asset_id, user_key, type, amount, assets_id, memo, sync) 
  		values(0, #{userKey}, "자산", #{amount}, #{assetsId}, #{memo}, #{sync});
	</insert>
	
	<insert id="addAssetToIncome" parameterType="assetOfMember">
  		insert into tp.income (mem_asset_id, income_id, user_key, amount, assets_id, ic_id, memo) 
  		values(#{memAssetId}, 0, #{userKey}, #{amount}, #{assetsId}, 6, #{memo});
	</insert>
	
	<insert id="addAssetToExpense" parameterType="assetOfMember">
  		insert into tp.expense (mem_asset_id, expense_id, user_key, amount, assets_id, ec_id, memo) 
  		values(#{memAssetId}, 0, #{userKey}, #{amount}, #{assetsId}, 12, #{memo});
	</insert>

	<update id="editAsset" parameterType="assetOfMember">
		update assets_of_member set amount=#{amount}, type="자산", 
		assets_id=#{assetsId}, memo=#{memo} where mem_asset_id=#{memAssetId};
	</update>

	<insert id="editAssetToIncome" parameterType="assetOfMember">
		insert into tp.income (mem_asset_id, income_id, user_key, amount, assets_id, ic_id, memo) 
  		values(#{memAssetId}, 0, #{userKey}, #{amount}, #{assetsId}, 6, #{memo});
	</insert>

	<insert id="editAssetToExpense" parameterType="assetOfMember">
		insert into tp.expense (mem_asset_id, expense_id, user_key, amount, assets_id, ec_id, memo) 
  		values(#{memAssetId}, 0, #{userKey}, #{amount}, #{assetsId}, 12, #{memo});
	</insert>

	<update id="delAsset" parameterType="assetOfMember">
		update assets_of_member set assets_id=99 where mem_asset_id=#{memAssetId};
	</update>
	
	<delete id="delAssetByuserkeyAll" >
		delete from assets_of_member where user_key=#{userKey};
	</delete>
	
	<select id="getNewsSettingsInfo" resultType="assetOfMember">
		select * from member where user_key = #{userKey};
	</select>

	<update id="setNews" parameterType="assetOfMember">
		update member set news_keywords = #{newsKeywords} where user_key = #{userKey};
	</update>

	<select id="selectListByMemo" parameterType="map" resultType="search">
		select amount, expense_date as date, assets_name as assets, ec_name as category, memo from tp.expense 
		join assets on tp.expense.assets_id = tp.assets.assets_id 
		join expense_category on tp.expense.ec_id = tp.expense_category.ec_id 
		where memo like CONCAT('%',#{memo},'%') and user_key = #{userKey} 
		union 
		select amount, income_date, assets_name, ic_name, memo from tp.income 
		join assets on tp.income.assets_id = tp.assets.assets_id 
		join income_category on tp.income.ic_id = tp.income_category.ic_id 
		where memo like CONCAT('%',#{memo},'%') and user_key = #{userKey}
		order by date;
	</select>

</mapper>
